// Original example with an extra role D who "encrypts" the secret number within a range 
// Implementable because the encryption is actually trivial 

Initial state: (0)
Initial register assignments: rn=0, rt=0, rx=0, rs=0
(0) a->d:n{rn'=n} (11)
(11) d->b:s{s=rn*12345/\rs'=s/\rt'=0} (12)
(12) a->b:t{t>0/\rt'=t} (2)
(2) c->b:x{rx'=x} (3)
(3) b->c:higher{higher=3/\rn>rx/\rt>1/\rt'=rt-1} (2)
(3) b->c:won{won=1/\rn=rx} (5)
(5) b->a:lost{lost=0} (7)
(3) b->c:lower{lower=2/\rn<rx/\rt>1/\rt'=rt-1} (2)
(3) b->c:lost{lost=0/\rn!=rx/\rt=1} (6)
(6) b->a:won{won=1} (7)
Final states: (7)
