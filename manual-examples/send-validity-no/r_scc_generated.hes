exists (s1:int) (s1':int) (x1:int) (s2:int). 
(((s1=1 /\ s1'=2 /\ 0<=s2 /\ s2<=4)
\/ (s1=3 /\ s1'=4 /\ 0<=s2 /\ s2<=4))
/\
(prodreach_r s1 s2)
/\ 
true
/\
(unreach_rs s2 x1))
s.t. 

prodreach_r (s1:int) (s2:int) : bool =mu 
(s1 = 0 /\ s2 = 0 /\ true /\ true)
 \/ (s1 = 2 /\ s2 = 2 /\ (exists (x1:int) (x2:int) . prodreach_r 1 1  /\ (x1 = 1) /\ (x2 = 1) /\ x1 = x2)) 
 \/ (s1 = 2 /\ s2 = 4 /\ (exists (x1:int) (x2:int) . prodreach_r 1 3  /\ (x1 = 1) /\ (x2 = 2) /\ x1 = x2)) 
 \/ (s1 = 4 /\ s2 = 2 /\ (exists (x1:int) (x2:int) . prodreach_r 3 1  /\ (x1 = 2) /\ (x2 = 1) /\ x1 = x2)) 
 \/ (s1 = 4 /\ s2 = 4 /\ (exists (x1:int) (x2:int) . prodreach_r 3 3  /\ (x1 = 2) /\ (x2 = 2) /\ x1 = x2)) 
\/ (s1 = 1 /\ (exists (x1:int) . prodreach_r 0 s2  /\ (x1 = 1))) 
\/ (s1 = 3 /\ (exists (x1:int) . prodreach_r 0 s2  /\ (x1 = 2))) 
\/ (s2 = 1 /\ (exists (x2:int) . prodreach_r s1 0  /\ (x2 = 1))) 
\/ (s2 = 3 /\ (exists (x2:int) . prodreach_r s1 0  /\ (x2 = 2))) 
;

unreach_rs (s:int) (x:int): bool =nu
false \/ (
s = 0 /\ (forall (v:int). (v = 1) => unreach_rs 1 x) 
/\ (forall (v:int). (v = 2) => unreach_rs 3 x) 
) \/ (
s = 1 /\ ((x = 1) => false) 
/\ (forall (v:int). (v = 1) => unreach_rs 2 x) 
) \/ (
s = 2 ) \/ (
s = 3 /\ ((x = 2) => false) 
/\ (forall (v:int). (v = 2) => unreach_rs 4 x) 
) \/ (
s = 4 );