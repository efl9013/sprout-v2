version = "3.1"
description = ""
requires =
"CoAR.EffCaml
 CoAR.Hoice
 CoAR.HorSat2
 CoAR.MiniSat
 CoAR.MuCyc
 CoAR.MuVal
 CoAR.PCSat
 CoAR.Printer
 CoAR.RCaml
 CoAR.SPACER
 CoAR.SyGuS
 CoAR.TRecS
 CoAR.Z3Sat
 CoAR.Z3Smt
 CoAR.c
 core
 ppx_deriving.runtime
 ppx_deriving_yojson.runtime
 yojson"
archive(byte) = "CoAR.cma"
archive(native) = "CoAR.cmxa"
plugin(byte) = "CoAR.cma"
plugin(native) = "CoAR.cmxs"
package "CHCOpt" (
  directory = "CHCOpt"
  version = "3.1"
  description = ""
  requires =
  "CoAR.common
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "CHCOpt.cma"
  archive(native) = "CHCOpt.cmxa"
  plugin(byte) = "CHCOpt.cma"
  plugin(native) = "CHCOpt.cmxs"
)
package "CHCOptSolver" (
  directory = "CHCOptSolver"
  version = "3.1"
  description = ""
  requires =
  "CoAR.CHCOpt
   CoAR.OptPCSat
   CoAR.ast
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "CHCOptSolver.cma"
  archive(native) = "CHCOptSolver.cmxa"
  plugin(byte) = "CHCOptSolver.cma"
  plugin(native) = "CHCOptSolver.cmxs"
)
package "EffCaml" (
  directory = "EffCaml"
  version = "3.1"
  description = ""
  requires =
  "CoAR.HOMC
   CoAR.HOMCSolver
   CoAR.RCaml
   CoAR.ast
   CoAR.automata
   CoAR.common
   compiler-libs.bytecomp
   compiler-libs.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "EffCaml.cma"
  archive(native) = "EffCaml.cmxa"
  plugin(byte) = "EffCaml.cma"
  plugin(native) = "EffCaml.cmxs"
)
package "HOMC" (
  directory = "HOMC"
  version = "3.1"
  description = ""
  requires =
  "CoAR.ast
   CoAR.automata
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "HOMC.cma"
  archive(native) = "HOMC.cmxa"
  plugin(byte) = "HOMC.cma"
  plugin(native) = "HOMC.cmxs"
)
package "HOMCSolver" (
  directory = "HOMCSolver"
  version = "3.1"
  description = ""
  requires =
  "CoAR.HOMC
   CoAR.HorSat2
   CoAR.TRecS
   CoAR.ast
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "HOMCSolver.cma"
  archive(native) = "HOMCSolver.cmxa"
  plugin(byte) = "HOMCSolver.cma"
  plugin(native) = "HOMCSolver.cmxs"
)
package "Hoice" (
  directory = "Hoice"
  version = "3.1"
  description = ""
  requires =
  "CoAR.Z3Smt
   CoAR.common
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   str
   yojson
   z3"
  archive(byte) = "Hoice.cma"
  archive(native) = "Hoice.cmxa"
  plugin(byte) = "Hoice.cma"
  plugin(native) = "Hoice.cmxs"
)
package "HorSat2" (
  directory = "HorSat2"
  version = "3.1"
  description = ""
  requires =
  "CoAR.HOMC core ppx_deriving.runtime ppx_deriving_yojson.runtime yojson"
  archive(byte) = "HorSat2.cma"
  archive(native) = "HorSat2.cmxa"
  plugin(byte) = "HorSat2.cma"
  plugin(native) = "HorSat2.cmxs"
)
package "LTS" (
  directory = "LTS"
  version = "3.1"
  description = "Labeled Transition Systems"
  requires = "CoAR.Z3Smt CoAR.ast ocamlgraph"
  archive(byte) = "LTS.cma"
  archive(native) = "LTS.cmxa"
  plugin(byte) = "LTS.cma"
  plugin(native) = "LTS.cmxs"
)
package "MiniSat" (
  directory = "MiniSat"
  version = "3.1"
  description = ""
  requires =
  "CoAR.SAT
   core
   minisat
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "MiniSat.cma"
  archive(native) = "MiniSat.cmxa"
  plugin(byte) = "MiniSat.cma"
  plugin(native) = "MiniSat.cmxs"
)
package "MuCyc" (
  directory = "MuCyc"
  version = "3.1"
  description =
  "A fixpoint logic validity checker based on cyclic-proof search"
  requires =
  "CoAR.PCSPSolver
   CoAR.Z3Smt
   CoAR.ast
   CoAR.common
   CoAR.muCLP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "MuCyc.cma"
  archive(native) = "MuCyc.cmxa"
  plugin(byte) = "MuCyc.cma"
  plugin(native) = "MuCyc.cmxs"
)
package "MuVal" (
  directory = "MuVal"
  version = "3.1"
  description = "A fixpoint logic validity checker based on pfwCSP solving"
  requires =
  "CoAR.PCSPSolver
   CoAR.Z3Smt
   CoAR.ast
   CoAR.muCLP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "MuVal.cma"
  archive(native) = "MuVal.cmxa"
  plugin(byte) = "MuVal.cma"
  plugin(native) = "MuVal.cmxs"
)
package "OptPCSat" (
  directory = "OptPCSat"
  version = "3.1"
  description = "An optimizing CHC solver based on pfwnCSP solving"
  requires =
  "CoAR.CHCOpt
   CoAR.PCSPSolver
   CoAR.SMT
   CoAR.Z3Smt
   CoAR.ast
   CoAR.common
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "OptPCSat.cma"
  archive(native) = "OptPCSat.cmxa"
  plugin(byte) = "OptPCSat.cma"
  plugin(native) = "OptPCSat.cmxs"
)
package "PCSPSolver" (
  directory = "PCSPSolver"
  version = "3.1"
  description = ""
  requires =
  "CoAR.Hoice
   CoAR.PCSat
   CoAR.Printer
   CoAR.SPACER
   CoAR.ast
   CoAR.common
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "PCSPSolver.cma"
  archive(native) = "PCSPSolver.cmxa"
  plugin(byte) = "PCSPSolver.cma"
  plugin(native) = "PCSPSolver.cmxs"
)
package "PCSat" (
  directory = "PCSat"
  version = "3.1"
  description = "A CHC/pfwnCSP/SyGuS solver based on CEGIS"
  requires =
  "CoAR.PCSat.coordination
   CoAR.PCSat.preprocessing
   CoAR.PCSat.template
   CoAR.SMT
   CoAR.pCSP
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "PCSat.cma"
  archive(native) = "PCSat.cmxa"
  plugin(byte) = "PCSat.cma"
  plugin(native) = "PCSat.cmxs"
  package "bf_synthesis" (
    directory = "bf_synthesis"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.SMT
     CoAR.Z3Smt
     CoAR.pCSP
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "bf_synthesis.cma"
    archive(native) = "bf_synthesis.cmxa"
    plugin(byte) = "bf_synthesis.cma"
    plugin(native) = "bf_synthesis.cmxs"
  )
  package "classification" (
    directory = "classification"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.bf_synthesis
     CoAR.PCSat.common
     CoAR.PCSat.qualifier
     CoAR.PCSat.regression
     CoAR.PCSat.template
     CoAR.Z3Smt
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "classification.cma"
    archive(native) = "classification.cmxa"
    plugin(byte) = "classification.cma"
    plugin(native) = "classification.cmxs"
  )
  package "common" (
    directory = "common"
    version = "3.1"
    description = ""
    requires =
    "CoAR.Z3Smt
     CoAR.ast
     CoAR.common
     CoAR.pCSP
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "PCSatCommon.cma"
    archive(native) = "PCSatCommon.cmxa"
    plugin(byte) = "PCSatCommon.cma"
    plugin(native) = "PCSatCommon.cmxs"
  )
  package "coordination" (
    directory = "coordination"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.PCSat.labeling
     CoAR.PCSat.resolution
     CoAR.PCSat.synthesis
     CoAR.PCSat.validation
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "coordination.cma"
    archive(native) = "coordination.cmxa"
    plugin(byte) = "coordination.cma"
    plugin(native) = "coordination.cmxs"
  )
  package "labeling" (
    directory = "labeling"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.SAT
     CoAR.SATSolver
     CoAR.pCSP
     core
     ocamlgraph
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "labeling.cma"
    archive(native) = "labeling.cmxa"
    plugin(byte) = "labeling.cma"
    plugin(native) = "labeling.cmxs"
  )
  package "preprocessing" (
    directory = "preprocessing"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.SMT
     CoAR.pCSP
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "preprocessing.cma"
    archive(native) = "preprocessing.cmxa"
    plugin(byte) = "preprocessing.cma"
    plugin(native) = "preprocessing.cmxs"
  )
  package "qualifier" (
    directory = "qualifier"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.bf_synthesis
     CoAR.PCSat.common
     CoAR.ast
     CoAR.common
     CoAR.pCSP
     core
     libsvm
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "qualifier.cma"
    archive(native) = "qualifier.cmxa"
    plugin(byte) = "qualifier.cma"
    plugin(native) = "qualifier.cmxs"
  )
  package "regression" (
    directory = "regression"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.bf_synthesis
     CoAR.PCSat.common
     CoAR.PCSat.qualifier
     CoAR.PCSat.template
     CoAR.Z3Smt
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "regression.cma"
    archive(native) = "regression.cmxa"
    plugin(byte) = "regression.cma"
    plugin(native) = "regression.cmxs"
  )
  package "resolution" (
    directory = "resolution"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.PCSat.synthesis
     CoAR.Z3Smt
     CoAR.pCSP
     core
     ocamlgraph
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "resolution.cma"
    archive(native) = "resolution.cmxa"
    plugin(byte) = "resolution.cma"
    plugin(native) = "resolution.cmxs"
  )
  package "synthesis" (
    directory = "synthesis"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.classification
     CoAR.PCSat.common
     CoAR.PCSat.qualifier
     CoAR.PCSat.template
     CoAR.SAT
     CoAR.SATSolver
     CoAR.Z3Smt
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "synthesis.cma"
    archive(native) = "synthesis.cmxa"
    plugin(byte) = "synthesis.cma"
    plugin(native) = "synthesis.cmxs"
  )
  package "template" (
    directory = "template"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.PCSat.qualifier
     CoAR.ast
     CoAR.common
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "template.cma"
    archive(native) = "template.cmxa"
    plugin(byte) = "template.cma"
    plugin(native) = "template.cmxs"
  )
  package "validation" (
    directory = "validation"
    version = "3.1"
    description = ""
    requires =
    "CoAR.PCSat.common
     CoAR.QSMT
     CoAR.Z3Smt
     CoAR.ast
     CoAR.common
     CoAR.pCSP
     core
     ppx_deriving.runtime
     ppx_deriving_yojson.runtime
     yojson"
    archive(byte) = "validation.cma"
    archive(native) = "validation.cmxa"
    plugin(byte) = "validation.cma"
    plugin(native) = "validation.cmxs"
  )
)
package "PLTS" (
  directory = "PLTS"
  version = "3.1"
  description = "Pushdown Labeled Transition Systems"
  requires = "CoAR.LTS CoAR.SMT CoAR.ast"
  archive(byte) = "PLTS.cma"
  archive(native) = "PLTS.cmxa"
  plugin(byte) = "PLTS.cma"
  plugin(native) = "PLTS.cmxs"
)
package "Printer" (
  directory = "Printer"
  version = "3.1"
  description = ""
  requires =
  "CoAR.PCSat
   CoAR.common
   CoAR.muCLP
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson
   z3"
  archive(byte) = "Printer.cma"
  archive(native) = "Printer.cmxa"
  plugin(byte) = "Printer.cma"
  plugin(native) = "Printer.cmxs"
)
package "QSMT" (
  directory = "QSMT"
  version = "3.1"
  description = "Quantified Satisfiability Modulo Theories"
  requires =
  "CoAR.SMT
   CoAR.Z3Smt
   CoAR.ast
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "QSMT.cma"
  archive(native) = "QSMT.cmxa"
  plugin(byte) = "QSMT.cma"
  plugin(native) = "QSMT.cmxs"
)
package "RCaml" (
  directory = "RCaml"
  version = "3.1"
  description = ""
  requires =
  "CoAR.CHCOpt
   CoAR.CHCOptSolver
   CoAR.PCSPSolver
   CoAR.SMT
   CoAR.ast
   CoAR.common
   compiler-libs.bytecomp
   compiler-libs.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "RCaml.cma"
  archive(native) = "RCaml.cmxa"
  plugin(byte) = "RCaml.cma"
  plugin(native) = "RCaml.cmxs"
)
package "SAT" (
  directory = "SAT"
  version = "3.1"
  description = ""
  requires =
  "CoAR.ast
   CoAR.common
   camlzip
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "SAT.cma"
  archive(native) = "SAT.cmxa"
  plugin(byte) = "SAT.cma"
  plugin(native) = "SAT.cmxs"
)
package "SATSolver" (
  directory = "SATSolver"
  version = "3.1"
  description = ""
  requires =
  "CoAR.MiniSat
   CoAR.SAT
   CoAR.Z3Sat
   CoAR.ast
   CoAR.common
   core
   minisat
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "SATSolver.cma"
  archive(native) = "SATSolver.cmxa"
  plugin(byte) = "SATSolver.cma"
  plugin(native) = "SATSolver.cmxs"
)
package "SMT" (
  directory = "SMT"
  version = "3.1"
  description = ""
  requires =
  "CoAR.ast
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson
   z3"
  archive(byte) = "SMT.cma"
  archive(native) = "SMT.cmxa"
  plugin(byte) = "SMT.cma"
  plugin(native) = "SMT.cmxs"
)
package "SMTSolver" (
  directory = "SMTSolver"
  version = "3.1"
  description = ""
  requires =
  "CoAR.SMT
   CoAR.Z3Smt
   CoAR.ast
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "SMTSolver.cma"
  archive(native) = "SMTSolver.cmxa"
  plugin(byte) = "SMTSolver.cma"
  plugin(native) = "SMTSolver.cmxs"
)
package "SPACER" (
  directory = "SPACER"
  version = "3.1"
  description = ""
  requires =
  "CoAR.Z3Smt
   CoAR.common
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson
   z3"
  archive(byte) = "SPACER.cma"
  archive(native) = "SPACER.cmxa"
  plugin(byte) = "SPACER.cma"
  plugin(native) = "SPACER.cmxs"
)
package "SyGuS" (
  directory = "SyGuS"
  version = "3.1"
  description = "interface for SyGuS-IF"
  requires = "CoAR.Z3Smt CoAR.ast CoAR.common core num z3"
  archive(byte) = "SyGuS.cma"
  archive(native) = "SyGuS.cmxa"
  plugin(byte) = "SyGuS.cma"
  plugin(native) = "SyGuS.cmxs"
)
package "TRecS" (
  directory = "TRecS"
  version = "3.1"
  description = ""
  requires =
  "CoAR.HOMC core ppx_deriving.runtime ppx_deriving_yojson.runtime yojson"
  archive(byte) = "TRecS.cma"
  archive(native) = "TRecS.cmxa"
  plugin(byte) = "TRecS.cma"
  plugin(native) = "TRecS.cmxs"
)
package "Z3Sat" (
  directory = "Z3Sat"
  version = "3.1"
  description = ""
  requires =
  "CoAR.SAT
   CoAR.ast
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson
   z3"
  archive(byte) = "Z3Sat.cma"
  archive(native) = "Z3Sat.cmxa"
  plugin(byte) = "Z3Sat.cma"
  plugin(native) = "Z3Sat.cmxs"
)
package "Z3Smt" (
  directory = "Z3Smt"
  version = "3.1"
  description = ""
  requires =
  "CoAR.SMT
   CoAR.ast
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson
   z3"
  archive(byte) = "Z3Smt.cma"
  archive(native) = "Z3Smt.cmxa"
  plugin(byte) = "Z3Smt.cma"
  plugin(native) = "Z3Smt.cmxs"
)
package "ast" (
  directory = "ast"
  version = "3.1"
  description = "AST definitions"
  requires =
  "CoAR.common
   CoAR.grammar
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   str
   yojson
   zarith"
  archive(byte) = "ast.cma"
  archive(native) = "ast.cmxa"
  plugin(byte) = "ast.cma"
  plugin(native) = "ast.cmxs"
)
package "automata" (
  directory = "automata"
  version = "3.1"
  description = ""
  requires =
  "CoAR.common core ppx_deriving.runtime ppx_deriving_yojson.runtime yojson"
  archive(byte) = "automata.cma"
  archive(native) = "automata.cmxa"
  plugin(byte) = "automata.cma"
  plugin(native) = "automata.cmxs"
)
package "c" (
  directory = "c"
  version = "3.1"
  description = "loader for ctl written in C language"
  requires = "CoAR.ast CoAR.muCLP core"
  archive(byte) = "c.cma"
  archive(native) = "c.cmxa"
  plugin(byte) = "c.cma"
  plugin(native) = "c.cmxs"
)
package "common" (
  directory = "common"
  version = "3.1"
  description = ""
  requires =
  "core
   core_unix
   core_unix.sys_unix
   domainslib
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson
   zarith"
  archive(byte) = "common.cma"
  archive(native) = "common.cmxa"
  plugin(byte) = "common.cma"
  plugin(native) = "common.cmxs"
)
package "grammar" (
  directory = "grammar"
  version = "3.1"
  description = ""
  requires =
  "CoAR.automata
   CoAR.common
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "grammar.cma"
  archive(native) = "grammar.cmxa"
  plugin(byte) = "grammar.cma"
  plugin(native) = "grammar.cmxs"
)
package "muCLP" (
  directory = "muCLP"
  version = "3.1"
  description = "The definition of muCLP"
  requires =
  "CoAR.LTS
   CoAR.ast
   CoAR.common
   CoAR.pCSP
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "muCLP.cma"
  archive(native) = "muCLP.cmxa"
  plugin(byte) = "muCLP.cma"
  plugin(native) = "muCLP.cmxs"
)
package "pCSP" (
  directory = "pCSP"
  version = "3.1"
  description = "The definition of pfwnCSP"
  requires =
  "CoAR.LTS
   CoAR.PLTS
   CoAR.SMT
   CoAR.SyGuS
   CoAR.ast
   CoAR.common
   camlzip
   core
   ppx_deriving.runtime
   ppx_deriving_yojson.runtime
   yojson"
  archive(byte) = "pCSP.cma"
  archive(native) = "pCSP.cmxa"
  plugin(byte) = "pCSP.cma"
  plugin(native) = "pCSP.cmxs"
)