type token =
    VAR of string
  | TRUE
  | TOP
  | TIMES
  | RPAREN
  | QUERY
  | PVAR of string
  | PLUS
  | OR
  | NOTEQ
  | NOT
  | MOD
  | MINUS
  | LT
  | LPAREN
  | LEQ
  | INT of Z.t
  | GT
  | GEQ
  | FALSE
  | EXISTS
  | EQ
  | EOF
  | DOT
  | DIV
  | DECLARE
  | COMMA
  | COLON
  | BOT
  | BOOL
  | ASSUME
  | AND
val menhir_begin_marker : int
val xv_vars : Ast.LogicOld.sort_env_list
val xv_terms : Ast.LogicOld.Term.t list
val xv_term : Ast.LogicOld.Term.t
val xv_separated_nonempty_list_COMMA_term_ : Ast.LogicOld.Term.t list
val xv_separated_nonempty_list_COMMA_atom_ : Ast.LogicOld.Formula.t list
val xv_separated_nonempty_list_COMMA_VAR_ : string list
val xv_separated_list_COMMA_term_ : Ast.LogicOld.Term.t list
val xv_separated_list_COMMA_atom_ : Ast.LogicOld.Formula.t list
val xv_separated_list_COMMA_VAR_ : string list
val xv_parser_main_logic_program :
  (Ast.LogicOld.Formula.t * Ast.LogicOld.Formula.t) list
val xv_loption_separated_nonempty_list_COMMA_term__ :
  Ast.LogicOld.Term.t list
val xv_loption_separated_nonempty_list_COMMA_atom__ :
  Ast.LogicOld.Formula.t list
val xv_loption_separated_nonempty_list_COMMA_VAR__ : string list
val xv_list_clause_ : (Ast.LogicOld.Formula.t * Ast.LogicOld.Formula.t) list
val xv_head : Ast.LogicOld.Formula.t
val xv_clauses : (Ast.LogicOld.Formula.t * Ast.LogicOld.Formula.t) list
val xv_clause : Ast.LogicOld.Formula.t * Ast.LogicOld.Formula.t
val xv_body : Ast.LogicOld.Formula.t
val xv_atoms : Ast.LogicOld.Formula.t list
val xv_atom : Ast.LogicOld.Formula.t
val menhir_end_marker : int
