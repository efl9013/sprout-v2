exists (s1: int) (rx1: int) (ry1: int) (rx'1: int) (ry'1: int) (s2: int) (rx2: int) (ry2: int) (rx'2: int) (ry'2: int) (x1: int) (x2: int). 
(s1 = 1 /\ s2 = 0 )
 /\ 
(prodreach_q s1 rx1 ry1 s2 rx2 ry2 )
 /\ 
((((ry'1 = x1) /\ (x1 > rx1)) /\ (rx'1 = rx1)))
 /\ 
(((rx'2 = x2) /\ (ry'2 = ry2)))

s.t.

prodreach_q (s'1:int) (rx'1: int) (ry'1: int) (s'2:int) (rx'2: int) (ry'2: int) : bool =mu 
(s'1 = 0 /\ s'2 = 0 /\ true /\ rx'1 = 0 /\ ry'1 = 0 /\ true /\ rx'2 = 0 /\ ry'2 = 0)
 \/ 
(s'1 = 1 /\ s'2 = 1 /\ (exists (x1:int) (x2:int) (rx1: int)(rx2: int)(ry1: int)(ry2: int). prodreach_q 0 rx1 ry1 0 rx2 ry2  /\ ((rx'1 = x1) /\ (ry'1 = ry1)) /\ ((rx'2 = x2) /\ (ry'2 = ry2)) /\ x1 = x2)) 
 \/ 
(s'1 = 2 /\ s'2 = 2 /\ (exists (x1:int) (x2:int) (rx1: int)(rx2: int)(ry1: int)(ry2: int). prodreach_q 1 rx1 ry1 1 rx2 ry2  /\ (((ry'1 = x1) /\ (x1 > rx1)) /\ (rx'1 = rx1)) /\ (((ry'2 = x2) /\ (x2 > rx2)) /\ (rx'2 = rx2)) /\ x1 = x2)) 
\/ 
(s'1 = 3 /\ (exists (x1:int) (rx1: int)(ry1: int). prodreach_q 2 rx1 ry1 s'2 rx'2 ry'2  /\ (((x1 > ry1) /\ (rx'1 = rx1)) /\ (ry'1 = ry1)))) 
\/ 
(s'2 = 3 /\ (exists (x2:int) (rx2: int)(ry2: int). prodreach_q s'1 rx'1 ry'1 2 rx2 ry2  /\ (((x2 > ry2) /\ (rx'2 = rx2)) /\ (ry'2 = ry2)))) 
;
