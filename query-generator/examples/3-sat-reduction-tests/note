3-sat-reduction-simplified-further is a translation of the following global type, which the CAV tool returns non-implementable for q: 

3-sat-reduction-simplified-further.gt 
																		μ tX2. (C -> X1 : x21. C -> X2 : x21. C -> X3 : x21. 
																				C -> NX1 : x21. C -> NX2 : x21. C -> NX3 : x21. 
																				C -> P : x21. C -> Q : x21. C -> R : x21. 
																				C -> X2 : t. C -> NX2 : f. X2 -> Q : m. Q -> X2 : m. 
																				tX2
																			    +
																			    C -> X1 : x22. C -> X2 : x22. C -> X3 : x22. 
																				C -> NX1 : x22. C -> NX2 : x22. C -> NX3 : x22. 
																				C -> P : x22. C -> Q : x22. C -> R : x22. 
																				C -> X2 : f. C -> NX2 : t. NX2 -> Q : m. Q -> NX2 : m. 
																			    tX2
																			    +
																			    C -> X1 : x23. C -> X2 : x23. C -> X3 : x23. 
																				C -> NX1 : x23. C -> NX2 : x23. C -> NX3 : x23. 
																				C -> P : x23. C -> Q : x23. C -> R : x23. 
																			    C -> R : next. 

μ tX1. (R -> P : m1. R -> C : yes. Q -> P : m. R -> Q : m. (C -> X1 : x11. C -> X2 : x11. C -> X3 : x11. 
												C -> NX1 : x11. C -> NX2 : x11. C -> NX3 : x11. 
											 	C -> P : x11. C -> Q : x11. C -> R : x11. 
											 	C -> X1 : t. C -> NX1 : f. 
											 	X1 -> Q : m. Q -> X1 : m. tX2
											 	+
											 	C -> X1 : x12. C -> X2 : x12. C -> X3 : x12. 
											 	C -> NX1 : x12. C -> NX2 : x12. C -> NX3 : x12. 
											 	C -> P : x12. C -> Q : x12. C -> R : x12. 
											 	C -> X1 : f. C -> NX1 : t.
											 	NX1 -> Q : m. Q -> NX1 : m. tX2)
		+
	    R -> P : m2. R -> C : no. Q -> P : m. P -> Q : m. 0))


(Sanity check that the predicates in the translated global type give unique values per message label in 3-sat-reduction-simplified-further


Now checking only RCC queries for participant q: 
Everything is invalid except for: 
q_rcc_3637_6364.hes
q_rcc_6364_3637.hes  


Checking these two individually: 
q_rcc_6364_3637.hes - valid 
q_rcc_3637_6364.hes - invalid 

So the two tools agree on there actually being a RCC violation

Figured out the reason for this is that the roles can loop back and take the forward edges to reach state 36/63, so we need a way to prevent this from happening 



