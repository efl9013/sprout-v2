Initial state: (0)
Initial register assignments: price = 0, bzero = 0, bone = 0, btwo = 0
(0) s->b0:x{bzero' > 0 /\ btwo' = btwo /\ bone' = bone /\ price' = price} (1)
(1) s->b1:x{bone' > 0 /\ bzero' = bzero /\ price' = price /\ btwo' = btwo} (2)
(2) s->b2:x{btwo' > 0 /\ bzero' = bzero /\ bone' = bone /\ price' = price} (3)
(3) b0->s:x{price' > 0 /\ bzero' = bzero /\ bone' = bone /\ btwo' = btwo} (4)
(4) s->b0:price{bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (5)
(5) b0->s:x{x = -1 /\ price <= bzero /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (10)
(5) b0->s:x{x = -2 /\ price > bzero /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (6)
(6) s->b1:price{bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (7)
(7) b1->s:x{x = -1 /\ price <= bone /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (10)
(7) b1->s:x{x = -2 /\ price > bone /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (8)
(8) s->b2:price{bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (9)
(9) b2->s:x{x = -1 /\ price <= btwo /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (10)
(9) b2->s:x{x = -2 /\ price > 1 /\ price' = price - 1 /\ bzero' = bzero /\ bone' = bone /\ btwo' = btwo} (4)
(9) b2->s:x{x = -2 /\ price <= 1 /\ price' = 0 /\ bzero' = bzero /\ bone' = bone /\ btwo' = btwo} (10)
(10) s->b0:x{x = -3 /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (11)
(11) s->b1:x{x = -3 /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (12)
(12) s->b2:x{x = -3 /\ bzero' = bzero /\ bone' = bone /\ price' = price /\ btwo' = btwo} (13)
Final states: (13)
