Initial state: (0)
Initial register assignments: bzero = 0, bone = 0, btwo = 0, price = 0
(0) s->b0:x{bzero'>0/\bone'=bone/\btwo'=btwo}(1)
(1) s->b1:x{bone'>0/\bzero'=bzero/\btwo'=btwo}(2)
(2) s->b2:x{btwo'>0/\bzero'=bzero/\bone'=bone}(3)
(3) s->b0:price{bzero'=bzero/\bone'=bone/\btwo'=btwo} (4)
(4) b0->s:buy{buy=-1/\price<=bzero/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (9)
(4) b0->s:pass{pass=-2/\price>bzero/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (5)
(5) s->b1:price{bzero'=bzero/\bone'=bone/\btwo'=btwo} (6)
(6) b1->s:buy{buy=-1/\price<=bone/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (9)
(6) b1->s:pass{pass=-2/\price>bone/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (7)
(7) s->b2:price{bzero'=bzero/\bone'=bone/\btwo'=btwo} (8)
(8) b2->s:buy{buy=-1/\price<=btwo/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (9)
(8) b2->s:pass{pass=-2/\price>btwo/\price'=price - 1/\price>1/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (3)
(8) b2->s:pass{pass=-2/\price>btwo/\price'=0/\price<=1/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (9)
(9) s->b0:exit{exit=-3/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (10)
(10) s->b1:exit{exit=-3/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (11)
(11) s->b2:exit{exit=-3/\bzero'=bzero/\bone'=bone/\btwo'=btwo} (12)
Final states: (12)
