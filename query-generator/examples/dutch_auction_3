Initial state: (0)
Initial register assignments: 
(0) s->b0:x{bid_0'>0/\bid_1'=bid_1/\bid_2'=bid_2}(1)
(1) s->b1:x{bid_1'>0/\bid_0'=bid_0/\bid_2'=bid_2}(2)
(2) s->b2:x{bid_2'>0/\bid_0'=bid_0/\bid_1'=bid_1}(3)
(3) s->b0:price{bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (4)
(4) b0->s:buy{buy=-1/\price<=bid_0/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (9)
(4) b0->s:pass{pass=-2/\price>bid_0/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (5)
(5) s->b1:price{bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (6)
(6) b1->s:buy{buy=-1/\price<=bid_1/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (9)
(6) b1->s:pass{pass=-2/\price>bid_1/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (7)
(7) s->b2:price{bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (8)
(8) b2->s:buy{buy=-1/\price<=bid_2/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (9)
(8) b2->s:pass{pass=-2/\price>bid_2/\price'=price - 1/\price>1/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (3)
(8) b2->s:pass{pass=-2/\price>bid_2/\price'=0/\price<=1/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (9)
(9) s->b0:exit{exit=-3/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (10)
(10) s->b1:exit{exit=-3/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (11)
(11) s->b2:exit{exit=-3/\bid_0'=bid_0/\bid_1'=bid_1/\bid_2'=bid_2} (12)
Final states: (12)
