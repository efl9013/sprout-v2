// time (sessionstar HigherLowerEncryptYesLeak.scr HigherLowerEncryptYesLeak A; sessionstar HigherLowerEncryptYesLeak.scr HigherLowerEncryptYesLeak B; sessionstar HigherLowerEncryptYesLeak.scr HigherLowerEncryptYesLeak C)

// Scribble reported a problem, aborting
Exception in thread "main" org.scribble.ext.assrt.core.type.session.AssrtSyntaxException: [assrt-core] Cannot project 
B->C{ higher([])((n > x) && (t > 1)).B->A:higher([])True.__HigherLowerEncryptYes_Aux__A_B_C__<n, (t - 1)>, win([])(n = x).B->A:lose([])True.end, lower([])((n < x) && (t > 1)).B->A:lower([])True.__HigherLowerEncryptYes_Aux__A_B_C__<n, (t - 1)>, lose([])(((n < x) || (n > x)) && (t = 1)).B->A:win([])True.end }
 onto D: cannot merge mixed termination.

// 2.1s 

module HigherLowerEncryptYesLeak;

type <fstar> "int" from "" as int;

global protocol HigherLowerEncryptYesLeak(role A, role B, role C, role D) {
  start(n0:int) from A to D;
  encrypt(m0:int) from D to B; @'m0=n0*12345'  
  limit(t0:int) from A to B;  @'n0<t0'
  do Aux(A, B, C);     @'B[n0, t0]'
}

aux global protocol Aux(role A, role B, role C)
            @'B[n: int = 0, t: int = 1]' {
  guess(x:int) from C to B;  @'0<=x && x<100'
  choice at B {
    higher() from B to C;    @'n>x && t>1'
    higher() from B to A;
    do Aux(A, B, C);   @'B[n, t-1]'
  } or {
    win() from B to C;       @'n=x'
    lose() from B to A;
  } or {
    lower() from B to C;     @'n<x && t>1'
    lower() from B to A;
    do Aux(A, B, C);   @'B[n, t-1]'
  } or {
    lose() from B to C;      @'((n<x || n>x) && t=1)'
    win() from B to A;
  }
}
